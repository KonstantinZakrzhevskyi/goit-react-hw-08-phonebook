{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","number","post","deleteContact","id","delete","changeFilter","createAction","items","createReducer","fulfilled","payload","state","filter","contact","loading","pending","rejected","error","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","Section","title","children","className","s","section","section__title","getContacts","getFilter","getLoading","getVisibleContacts","normalizeFilter","toLowerCase","trim","includes","ContactForm","useState","setName","phone","setPhone","useSelector","contactsSelectors","dispatch","useDispatch","handleInputChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","map","toast","contactsOperations","success","form__label","form__input","type","pattern","required","onChange","form__btn","disabled","Filter","filter__label","filter__text","filter__input","contactsActions","ContactList","useEffect","contact__list","contact__item","contact__text","contact__btn","onClick","onDeleteContact","Loading","loader","color","height","width","timeout","App","isLoadingContacts","Loader","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd9b09c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1yMOc\",\"form__label\":\"ContactForm_form__label__W2aUn\",\"form__input\":\"ContactForm_form__input__UWres\",\"form__btn\":\"ContactForm_form__btn__HjAEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__33Clf\",\"contact__item\":\"ContactList_contact__item__1Lqaj\",\"contact__text\":\"ContactList_contact__text__2nsRi\",\"contact__btn\":\"ContactList_contact__btn__3N1II\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__text\":\"Filter_filter__text__k_Xnl\",\"filter__input\":\"Filter_filter__input__27ovC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3VJzt\",\"section__title\":\"Section_section__title__2yEtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3feav\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61c0f5e333f24c00178236b7.mockapi.io/api/v1';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', { name, number });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\n// ============= 1 вариант =============\r\n// const fetchContacts = () => {\r\n//   dispatch(fetchContactsRequest());\r\n\r\n//   axios\r\n//     .get('/contacts')\r\n//     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n//     .catch(error => dispatch(fetchContactsError(error)));\r\n// };\r\n\r\n//  ============ 2 вариант(асинхронный) ==========\r\n// const fetchContacts = () => async dispatch => {\r\n//   dispatch(fetchContactsRequest);\r\n\r\n//   try {\r\n//     const { data } = await axios.get('/contacts');\r\n\r\n//     dispatch(fetchContactsSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\n// const addContact = text => dispatch => {\r\n//   const contact = {\r\n//     text,\r\n//     completed: false,\r\n//   };\r\n\r\n//   dispatch(addContactRequest());\r\n\r\n//   axios\r\n//     .post('/contacts', contact)\r\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//     .catch(error => dispatch(addContactError(error)));\r\n// };\r\n\r\n// const deleteContact = contactId => dispatch => {\r\n//   dispatch(deleteContactRequest());\r\n\r\n//   axios\r\n//     .delete('/contacts/${contactId')\r\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\r\n//     .catch(error => dispatch(deleteContactError(error)));\r\n// };\r\n\r\n// export default { fetchContacts, addContact, deleteContact };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contacts-operations';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.rejected]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.section__title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeFilter = filter.toLowerCase().trim();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-hot-toast';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts/index';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? toast.error(`${name} is already in contacts.`)\r\n      : dispatch(contactsOperations.addContact({ name, phone }));\r\n\r\n    reset();\r\n    toast.success('addContact');\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.form__btn} type=\"submit\" disabled={!name}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from 'redux/contacts/index';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filter__label}>\r\n      <p className={s.filter__text}>Find contacts by name</p>\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={value}\r\n        onChange={e =>\r\n          dispatch(contactsActions.changeFilter(e.currentTarget.value))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/contacts/index';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id =>\r\n    dispatch(\r\n      contactsOperations.deleteContact(id),\r\n      toast.success('Delete contact'),\r\n    );\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.contact__list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li className={s.contact__item} key={id}>\r\n          <p className={s.contact__text}>{name}:</p>\r\n          <p className={s.contact__text}>{phone}</p>\r\n          <button\r\n            className={s.contact__btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type=\"BallTriangle\"\r\n        color=\"#00BFFF\"\r\n        height={200}\r\n        width={200}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useSelector } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { getLoading } from 'redux/contacts/contacts-selectors';\nimport Loader from 'components/Loader';\n\nimport './App.css';\n\nfunction App() {\n  const isLoadingContacts = useSelector(getLoading);\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      {isLoadingContacts && <Loader />}\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n      <Toaster position=\"top-right\" />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}